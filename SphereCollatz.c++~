// ----------------------------
// projects/collatz/Collatz.c++
// Copyright (C) 2015
// Glenn P. Downing
// ----------------------------

// --------
// includes
// --------

#include <cassert>  // assert
#include <iostream> // endl, istream, ostream
#include <sstream>  // istringstream
#include <string>   // getline, string
#include <utility>  // make_pair, pair


#include <cassert> 

using namespace std;

// ------------
// collatz_read
// ------------
#ifdef ONLINE_JUDGE
    #define NDEBUG
#endif
#define CACHESIZE 1000000
#ifdef CACHESIZE
int lazycache[CACHESIZE]={0};
#endif
pair<int, int> collatz_read (const string& s) {
    istringstream sin(s);
    int i;
    int j;
    sin >> i >> j;
    return make_pair(i, j);}

// ------------
// collatz_eval
// ------------

int collatz_eval (int i, int j) {
	int temp;
        int m=0;

   
    if (i>j){
        temp=i;
        i=j;
        j=temp;
    }
    assert(i>0);
    assert(j>0);


    for(int a=i; a<=j; a++){

        int c = 1;
 
        int n = a;
 if((lazycache[n]!=0)){
	n=0;
        	}
        while (n> 1) {
	   
            if ((n % 2) == 0){
                n = (n / 2);
   
            }
            else{
                n = (3 * n) + 1;
	        }
            ++c;
	    }
        assert(c > 0);
#ifdef CACHESIZE
	if(lazycache[a]==0){
	lazycache[a]=c;
	}
        if(lazycache[a]>m){
            m=lazycache[a];

        }
	#endif  
	#ifndef CACHESIZE
        if(c>m){
            m=c;

        }
	#endif 
    }
    return m;
}

// -------------
// collatz_print
// -------------

void collatz_print (ostream& w, int i, int j, int v) {
    w << i << " " << j << " " << v << endl;}

// -------------
// collatz_solve
// -------------

void collatz_solve (istream& r, ostream& w) {
    string s;
    while (getline(r, s)) {
        const pair<int, int> p = collatz_read(s);
        const int            i = p.first;
        const int            j = p.second;
        const int            v = collatz_eval(i, j);
        collatz_print(w, i, j, v);}}


// -------------------------------
// projects/collatz/RunCollatz.c++
// Copyright (C) 2015
// Glenn P. Downing
// -------------------------------

// -------
// defines
// -------



// --------
// includes
// --------



// ----
// main
// ----

int main () {

    collatz_solve(cin, cout);
    
    return 0;}

/*
% g++-4.8 -pedantic -std=c++11 -Wall Collatz.c++ RunCollatz.c++ -o RunCollatz



% cat RunCollatz.in
1 10
100 200
201 210
900 1000



% RunCollatz < RunCollatz.in > RunCollatz.out



% cat RunCollatz.out
1 10 1
100 200 1
201 210 1
900 1000 1



% doxygen -g
// That creates the file Doxyfile.
// Make the following edits to Doxyfile.
// EXTRACT_ALL            = YES
// EXTRACT_PRIVATE        = YES
// EXTRACT_STATIC         = YES



% doxygen Doxyfile
// That creates the directory html/.
*/
